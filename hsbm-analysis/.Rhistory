block_star=fct_relevel(block, c(hh_subblocks, se_subblocks)),
block_otu=factor(block_otu, levels=taxa_block_order)
)
sub_comm11 <- block_pair_communities(hmem, 1, 1)
sub_comm11 <- block_pair_communities(hmem, 1, 1) |>
mutate(
block_star=fct_relevel(block_star, c(hh_subblocks, se_subblocks)),
block_otu=factor(block_otu, levels=taxa_block_order)
)
sub_comm11
arrange(sub_comm11, block_star)
arrange(sub_comm11, block_star, block_otu)
sub_comm11 |>
mutate(alpha_div=map(sub_comm, alpha_diversity, method="shannon")) |>
unnest(alpha_div)
alpha_divs <- sub_comm11 |>
mutate(alpha_div=map(sub_comm, alpha_diversity, method="shannon")) |>
unnest(alpha_div)
ggplot(alpha_divs, aes(alpha_div)) +
geom_boxplot(col="#6f9dcf", alpha=0.7, outlier.shape=NA) +
geom_point(size=0.76) +
# geom_vline(aes(xintercept=x), tibble(x=samp_inter), col="gray40", linetype="dashed") +
# coord_flip() +\
facet_grid(block_star ~ block_otu) +
labs(x="Sample Block", y="Evenness") +
theme_bw()
ggplot(alpha_divs, aes(block_star, alpha_div)) +
geom_boxplot(col="#6f9dcf", alpha=0.7, outlier.shape=NA) +
geom_point(size=0.76) +
# geom_vline(aes(xintercept=x), tibble(x=samp_inter), col="gray40", linetype="dashed") +
# coord_flip() +\
facet_grid(block_star ~ block_otu) +
labs(x="Sample Block", y="Evenness") +
theme_bw()
ggplot(alpha_divs, aes(0, alpha_div)) +
geom_boxplot(col="#6f9dcf", alpha=0.7, outlier.shape=NA) +
geom_point(size=0.76) +
# geom_vline(aes(xintercept=x), tibble(x=samp_inter), col="gray40", linetype="dashed") +
# coord_flip() +\
facet_grid(block_star ~ block_otu) +
labs(x="Sample Block", y="Evenness") +
theme_bw()
?theme
?theme
ggplot(alpha_divs, aes(0, alpha_div)) +
geom_boxplot(col="#6f9dcf", alpha=0.7, outlier.shape=NA) +
geom_point(size=0.76) +
# geom_vline(aes(xintercept=x), tibble(x=samp_inter), col="gray40", linetype="dashed") +
# coord_flip() +
facet_grid(block_star ~ block_otu) +
labs(x="Sample Block", y="Evenness") +
theme_bw() +
theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
panel.spacing=0
)
ggplot(alpha_divs, aes(0, alpha_div)) +
geom_boxplot(col="#6f9dcf", alpha=0.7, outlier.shape=NA) +
geom_point(size=0.76) +
# geom_vline(aes(xintercept=x), tibble(x=samp_inter), col="gray40", linetype="dashed") +
# coord_flip() +
facet_grid(block_star ~ block_otu) +
labs(x="Sample Block", y="Evenness") +
theme_bw() +
theme(
axis.ticks.x=element_blank(),
axis.text.x=element_blank(),
panel.spacing=unit(0, "mm")
)
ggplot(alpha_divs, aes(block_star, block_otu, fill=mean(alpha_div))) +
geom_tile() +
scale_color_viridis_c(option="inferno") +
labs(x="Sample Block", y="Evenness") +
theme_bw()
sub_comm11 |>
mutate(alpha_div=map(sub_comm, alpha_diversity, method="shannon"))
sub_comm11 |>
mutate(alpha_div=map_dbl(sub_comm, ~mean(alpha_diversity(x, method="shannon"))))
sub_comm11 |>
mutate(alpha_div=map_dbl(sub_comm, ~mean(alpha_diversity(.x, method="shannon"))))
sub_comm11 |>
mutate(alpha_div=map(sub_comm, alpha_diversity, method="shannon")) |>
unnest(alpha_div)
sub_comm11 |>
mutate(alpha_div=map(sub_comm, alpha_diversity, method="shannon")) |>
unnest(alpha_div) |>
head(15)
col_diversity <- function(comm, method="shannon") {
norm <- function(col) {
lc <- ifelse(col > 0, log(col) + 1, 0)
p <- col / sum(col)
p[p > 0]
}
if (method == "shannon")
fun <- function(p) if (length(p) > 1) -sum(p * log(p)) else 0
else if (method == "evenness")
fun <- function(p) if (length(p) > 1) -sum(p * log(p)) / log(length(p)) else 0
else
fun <- function(p) 1 / sum(p^2)
comm |>
map(norm) |>
map_dbl(fun)
}
alpha_divs <- sub_comm11 |>
mutate(alpha_div=map(sub_comm, alpha_diversity, method="shannon")) |>
unnest(alpha_div)
ggplot(alpha_divs, aes(block_star, block_otu, fill=mean(alpha_div))) +
geom_tile() +
scale_color_viridis_c(option="inferno") +
labs(x="Sample Block", y="Evenness") +
theme_bw()
sub_comm11 |>
mutate(alpha_div=map(sub_comm, alpha_diversity, method="shannon")) |>
unnest(alpha_div)
col_diversity <- function(comm, method="shannon") {
norm <- function(col) {
lc <- ifelse(col > 0, log(col) + 1, 0)
p <- col / sum(col)
p[p > 0]
}
if (method == "shannon")
fun <- function(p) if (length(p) > 1) -sum(p * log(p)) else 0
else if (method == "evenness")
fun <- function(p) if (length(p) > 1) -sum(p * log(p)) / log(length(p)) else 0
else
fun <- function(p) 1 / sum(p^2)
comm |>
map(norm) |>
map_dbl(fun)
}
alpha_divs <- sub_comm11 |>
mutate(alpha_div=map(sub_comm, alpha_diversity, method="shannon")) |>
unnest(alpha_div)
alpha_divs
alpha_divs$sub_comm[[10]]
alpha_divs$sub_comm[[10]] |> as.matrix()
alpha_diversity <- function(comm, method="shannon") {
cmat <- select(comm, 2:last_col()) |> as.matrix()
as_tibble(t(cmat), .name_repair="minimal") |>
col_diversity(method)
# comm |>
#     rowwise() |>
#     mutate(tot=sum(c_across(2:last_col()))) |>
#     ungroup() |>
#     transmute(across(2:last_col(1), ~.x / tot)) |>
#     rowwise() |>
#     summarize()
}
sub_comm11 |>
mutate(alpha_div=map(sub_comm, alpha_diversity, method="shannon")) |>
unnest(alpha_div)
col_diversity <- function(comm, method="shannon") {
norm <- function(col) {
lc <- ifelse(col > 0, log(col) + 1, 0)
p <- col / sum(col)
print(length(p[p > 0]))
p[p > 0]
}
if (method == "shannon")
fun <- function(p) if (length(p) > 1) -sum(p * log(p)) else 0
else if (method == "evenness")
fun <- function(p) if (length(p) > 1) -sum(p * log(p)) / log(length(p)) else 0
else
fun <- function(p) 1 / sum(p^2)
comm |>
map(norm) |>
map_dbl(fun)
}
alpha_diversity(alpha_divs$sub_comm[[10]])
col_diversity <- function(comm, method="shannon") {
norm <- function(col) {
lc <- ifelse(col > 0, log(col) + 1, 0)
p <- col / sum(col)
print(p[p > 0])
p[p > 0]
}
if (method == "shannon")
fun <- function(p) if (length(p) > 1) -sum(p * log(p)) else 0
else if (method == "evenness")
fun <- function(p) if (length(p) > 1) -sum(p * log(p)) / log(length(p)) else 0
else
fun <- function(p) 1 / sum(p^2)
comm |>
map(norm) |>
map_dbl(fun)
}
alpha_diversity(alpha_divs$sub_comm[[10]])
col_diversity <- function(comm, method="shannon") {
norm <- function(col) {
print(col)
# lc <- ifelse(col > 0, log(col) + 1, 0)
p <- col / sum(col)
p[p > 0]
}
if (method == "shannon")
fun <- function(p) if (length(p) > 1) -sum(p * log(p)) else 0
else if (method == "evenness")
fun <- function(p) if (length(p) > 1) -sum(p * log(p)) / log(length(p)) else 0
else
fun <- function(p) 1 / sum(p^2)
comm |>
map(norm) |>
map_dbl(fun)
}
alpha_diversity(alpha_divs$sub_comm[[10]])
col_diversity <- function(comm, method="shannon") {
norm <- function(col) {
# lc <- ifelse(col > 0, log(col) + 1, 0)
if (sum(col) == 0)
return(0)
p <- col / sum(col)
p[p > 0]
}
if (method == "shannon")
fun <- function(p) if (length(p) > 1) -sum(p * log(p)) else 0
else if (method == "evenness")
fun <- function(p) if (length(p) > 1) -sum(p * log(p)) / log(length(p)) else 0
else
fun <- function(p) 1 / sum(p^2)
comm |>
map(norm) |>
map_dbl(fun)
}
sub_comm11 |>
mutate(alpha_div=map(sub_comm, alpha_diversity, method="shannon")) |>
unnest(alpha_div)
alpha_divs <- sub_comm11 |>
mutate(alpha_div=map(sub_comm, alpha_diversity, method="shannon")) |>
unnest(alpha_div)
ggplot(alpha_divs, aes(block_star, block_otu, fill=mean(alpha_div))) +
geom_tile() +
scale_color_viridis_c(option="inferno") +
labs(x="Sample Block", y="Evenness") +
theme_bw()
sub_comm11 |>
mutate(
alpha_divs=map(sub_comm, alpha_diversity, method="shannon"),
alpha_div=map_dbl(alpha_divs, mean)
)
ggplot(alpha_divs, aes(block_star, block_otu, fill=alpha_div)) +
geom_tile() +
scale_color_viridis_c(option="inferno") +
labs(x="Sample Block", y="Evenness") +
theme_bw()
ggplot(alpha_divs, aes(block_star, block_otu, fill=alpha_div)) +
geom_tile() +
scale_fill_viridis_c(option="inferno") +
labs(x="Sample Block", y="Evenness") +
theme_bw()
ggplot(alpha_divs, aes(block_star, fct_rev(block_otu), fill=alpha_div)) +
geom_tile() +
scale_fill_viridis_c(option="inferno") +
labs(x="Sample Block", y="Evenness") +
theme_bw()
samp_inter <- cumsum(c(8, 5)) + 0.5
ggplot(alpha_divs, aes(block_star, fct_rev(block_otu), fill=alpha_div)) +
geom_tile() +
geom_vline(aes(xintercept=x), tibble(x=samp_inter), col="gray40", linetype="dashed") +
scale_fill_viridis_c(option="inferno") +
labs(x="Sample Block", y="Evenness") +
theme_bw()
samp_inter <- cumsum(c(3, 8)) + 0.5
ggplot(alpha_divs, aes(block_star, fct_rev(block_otu), fill=alpha_div)) +
geom_tile() +
geom_vline(aes(xintercept=x), tibble(x=samp_inter), col="gray40", linetype="dashed") +
scale_fill_viridis_c(option="inferno") +
labs(x="Sample Block", y="Evenness") +
theme_bw()
sub_comm11 |>
mutate(
beta_divs=map(sub_comm, beta_diversity, method="shannon"),
beta_div=map_dbl(beta_divs, mean)
)
beta_divs <- sub_comm11 |>
mutate(
beta_divs=map(sub_comm, beta_diversity, method="shannon"),
beta_div=map_dbl(beta_divs, mean)
)
ggplot(beta_divs, aes(block_otu, fct_rev(block_star), fill=beta_div)) +
geom_tile() +
# geom_vline(aes(xintercept=x), tibble(x=samp_inter), col="gray40", linetype="dashed") +
scale_fill_viridis_c(option="inferno") +
labs(x="Sample Block", y="Evenness") +
theme_bw()
otu_inter <- cumsum(c(2, 9, 7, 3)) + 0.5
ggplot(beta_divs, aes(fct_rev(block_otu), block_star, fill=beta_div)) +
geom_tile() +
geom_hline(aes(xintercept=x), tibble(x=otu_inter), col="gray40", linetype="dashed") +
scale_fill_viridis_c(option="inferno") +
labs(x="Sample Block", y="Evenness") +
theme_bw()
ggplot(beta_divs, aes(fct_rev(block_otu), block_star, fill=beta_div)) +
geom_tile() +
geom_hline(aes(yintercept=x), tibble(x=otu_inter), col="gray40", linetype="dashed") +
scale_fill_viridis_c(option="inferno") +
labs(x="Sample Block", y="Evenness") +
theme_bw()
ggplot(beta_divs, aes(block_star, fct_rev(block_otu), fill=beta_div)) +
geom_tile() +
geom_hline(aes(yintercept=x), tibble(x=otu_inter), col="gray40", linetype="dashed") +
scale_fill_viridis_c(option="inferno") +
labs(x="Sample Block", y="Evenness") +
theme_bw()
beta_divs <- sub_comm11 |>
mutate(
beta_divs=map(sub_comm, beta_diversity, method="evenness"),
beta_div=map_dbl(beta_divs, mean)
)
otu_inter <- cumsum(c(2, 9, 7, 3)) + 0.5
ggplot(beta_divs, aes(block_star, fct_rev(block_otu), fill=beta_div)) +
geom_tile() +
geom_hline(aes(yintercept=x), tibble(x=otu_inter), col="gray40", linetype="dashed") +
scale_fill_viridis_c(option="inferno") +
labs(x="Sample Block", y="Evenness") +
theme_bw()
ggplot(beta_divs, aes(block_star, fct_rev(block_otu), fill=ifelse(beta_div == 0, NA, beta_div))) +
geom_tile() +
geom_vline(aes(xintercept=x), tibble(x=samp_inter), col="gray40", linetype="dashed") +
geom_hline(aes(yintercept=x), tibble(x=otu_inter), col="gray40", linetype="dashed") +
scale_fill_viridis_c(option="inferno") +
labs(x="Sample Block", y="Evenness") +
theme_bw()
ggplot(beta_divs, aes(block_star, fct_rev(block_otu), fill=ifelse(beta_div == 0, NA, beta_div))) +
geom_tile() +
geom_vline(aes(xintercept=x), tibble(x=samp_inter), col="gray40", linetype="dashed") +
geom_hline(aes(yintercept=x), tibble(x=otu_inter), col="gray40", linetype="dashed") +
scale_fill_viridis_c(option="inferno") +
labs(x="Sample Block", y="OTU Block", fill="Evenness") +
theme_bw()
ggplot(beta_divs, aes(block_star, fct_rev(block_otu), fill=ifelse(beta_div == 0, NA, beta_div))) +
geom_tile() +
geom_vline(aes(xintercept=x), tibble(x=samp_inter), col="white", linetype="longdash") +
geom_hline(aes(yintercept=x), tibble(x=otu_inter), col="white", linetype="dashed") +
scale_fill_viridis_c(option="inferno") +
labs(x="Sample Block", y="OTU Block", fill="Evenness") +
theme_bw()
ggplot(beta_divs, aes(block_star, fct_rev(block_otu), fill=ifelse(beta_div == 0, NA, beta_div))) +
geom_tile() +
geom_vline(aes(xintercept=x), tibble(x=samp_inter), col="white", linetype="longdash") +
geom_hline(aes(yintercept=x), tibble(x=otu_inter), col="white", linetype="logdash") +
scale_fill_viridis_c(option="inferno") +
labs(x="Sample Block", y="OTU Block", fill="Evenness") +
theme_bw()
ggplot(beta_divs, aes(block_star, fct_rev(block_otu), fill=ifelse(beta_div == 0, NA, beta_div))) +
geom_tile() +
geom_vline(aes(xintercept=x), tibble(x=samp_inter), col="white", linetype="longdash") +
geom_hline(aes(yintercept=x), tibble(x=otu_inter), col="white", linetype="longdash") +
scale_fill_viridis_c(option="inferno") +
labs(x="Sample Block", y="OTU Block", fill="Evenness") +
theme_bw()
beta_divs <- sub_comm11 |>
mutate(
beta_divs=map(sub_comm, beta_diversity, method="shannon"),
beta_div=map_dbl(beta_divs, mean)
)
otu_inter <- cumsum(c(2, 9, 7, 3)) + 0.5
ggplot(beta_divs, aes(block_star, fct_rev(block_otu), fill=ifelse(beta_div == 0, NA, beta_div))) +
geom_tile() +
geom_vline(aes(xintercept=x), tibble(x=samp_inter), col="white", linetype="longdash") +
geom_hline(aes(yintercept=x), tibble(x=otu_inter), col="white", linetype="longdash") +
scale_fill_viridis_c(option="inferno") +
labs(x="Sample Block", y="OTU Block", fill="Evenness") +
theme_bw()
beta_divs <- sub_comm11 |>
mutate(
beta_divs=map(sub_comm, beta_diversity, method="evenness"),
beta_div=map_dbl(beta_divs, mean)
)
otu_inter <- cumsum(c(2, 9, 7, 3)) + 0.5
ggplot(beta_divs, aes(block_star, fct_rev(block_otu), fill=ifelse(beta_div == 0, NA, beta_div))) +
geom_tile() +
geom_vline(aes(xintercept=x), tibble(x=samp_inter), col="white", linetype="longdash") +
geom_hline(aes(yintercept=x), tibble(x=otu_inter), col="white", linetype="longdash") +
scale_fill_viridis_c(option="inferno") +
labs(x="Sample Block", y="OTU Block", fill="Evenness") +
theme_bw()
beta_divs <- sub_comm11 |>
mutate(
beta_divs=map(sub_comm, beta_diversity, method="shannon"),
beta_div=map_dbl(beta_divs, mean)
)
otu_inter <- cumsum(c(2, 9, 7, 3)) + 0.5
ggplot(beta_divs, aes(block_star, fct_rev(block_otu), fill=ifelse(beta_div == 0, NA, beta_div))) +
geom_tile() +
geom_vline(aes(xintercept=x), tibble(x=samp_inter), col="white", linetype="longdash") +
geom_hline(aes(yintercept=x), tibble(x=otu_inter), col="white", linetype="longdash") +
scale_fill_viridis_c(option="inferno") +
labs(x="Sample Block", y="OTU Block", fill="Evenness") +
theme_bw()
sub_comm21
sub_comm21 <- block_pair_communities(hmem, 2, 1)
sub_comm21
tmp = block_pair_communities(hmem, 2, 1)
map_int(tmp$sub_comm, nrow)
alpha_divs <- sub_comm11 |>
mutate(
alpha_divs=map(sub_comm, alpha_diversity, method="shannon"),
alpha_div=map_dbl(alpha_divs, mean)
)
samp_inter <- cumsum(c(3, 5)) + 0.5
ggplot(alpha_divs, aes(block_star, fct_rev(block_otu), fill=alpha_div)) +
geom_tile() +
geom_vline(aes(xintercept=x), tibble(x=samp_inter), col="gray40", linetype="dashed") +
scale_fill_viridis_c(option="inferno") +
labs(x="Sample Block", y="Evenness") +
theme_bw()
ggplot(beta_divs, aes(block_star, fct_rev(block_otu), fill=ifelse(beta_div == 0, NA, beta_div))) +
geom_tile() +
geom_vline(aes(xintercept=x), tibble(x=samp_inter), col="white", linetype="longdash") +
geom_hline(aes(yintercept=x), tibble(x=otu_inter), col="white", linetype="longdash") +
scale_fill_viridis_c(option="inferno") +
labs(x="Sample Block", y="OTU Block", fill="Evenness") +
theme_bw()
count(abun, `site-animal-health`)
count(abun, site-animal-health)
abun
count(read_csv("level-7.csv") , `site-animal-health`)
sub_comm21$sub_comm[[1]]
sub_comm21$sub_comm[[25]]
sub_comm21$sub_comm[[250]]
sub_comm21$sub_comm[[50]]
sub_comm21 <- block_pair_communities(hmem, 2, 1) |>
mutate(
# block_star=fct_relevel(block_star, c(hh_subblocks, se_subblocks)),
block_otu=factor(block_otu, levels=taxa_block_order)
)
alpha_divs <- sub_comm11 |>
mutate(
alpha_divs=map(sub_comm, alpha_diversity, method="shannon"),
alpha_div=map_dbl(alpha_divs, mean)
)
ggplot(alpha_divs, aes(block_star, fct_rev(block_otu), fill=alpha_div)) +
geom_tile() +
# geom_vline(aes(xintercept=x), tibble(x=samp_inter), col="gray40", linetype="dashed") +
scale_fill_viridis_c(option="inferno") +
labs(x="Sample Block", y="Evenness") +
theme_bw()
alpha_divs <- sub_comm21 |>
mutate(
alpha_divs=map(sub_comm, alpha_diversity, method="shannon"),
alpha_div=map_dbl(alpha_divs, mean)
)
ggplot(alpha_divs, aes(block_star, fct_rev(block_otu), fill=alpha_div)) +
geom_tile() +
# geom_vline(aes(xintercept=x), tibble(x=samp_inter), col="gray40", linetype="dashed") +
scale_fill_viridis_c(option="inferno") +
labs(x="Sample Block", y="Evenness") +
theme_bw()
beta_divs <- sub_comm21 |>
mutate(
beta_divs=map(sub_comm, beta_diversity, method="shannon"),
beta_div=map_dbl(beta_divs, mean)
)
ggplot(beta_divs, aes(block_star, fct_rev(block_otu), fill=ifelse(beta_div == 0, NA, beta_div))) +
geom_tile() +
# geom_vline(aes(xintercept=x), tibble(x=samp_inter), col="white", linetype="longdash") +
geom_hline(aes(yintercept=x), tibble(x=otu_inter), col="white", linetype="longdash") +
scale_fill_viridis_c(option="inferno") +
labs(x="Sample Block", y="OTU Block", fill="Evenness") +
theme_bw()
library(tidyverse)
library(reticulate)
library(ggthemes)
library(ggprism)
library(gridExtra)
source("hsbm-analysis-helpers.R")
# mdict <- py_load_object("module-members.pickle", pickle="pickle")
fit <- py_load_object("fit-dict2.pickle", pickle="pickle")
get_block_types <- function(block) ifelse(str_detect(block, "k__"), "🦠", "⭐")
get_level_df <- function(lblocks) {
print(lblocks)
imap_dfr(lblocks, ~tibble(block=.y, type=get_block_types(.x), label=.x))
}
tidy_level <- function(lblocks, lvl) tibble(level=as.integer(lvl), get_level_df(lblocks))
hmem <- imap_dfr(fit$membership, tidy_level)
abun <- read_csv("level-7.csv") |>
select(index, contains("k__"))
hmem
filter(hmem, type == "⭐", level == 0)
filter(hmem, type == "🦠", level == 0)
hh_subblocks <- c(25, 48, 30, 117, 22, 120, 139, 94) |> as.character()
se_subblocks <- c(131, 97, 31, 33, 8, 122, 135, 99) |> as.character()
taxa_block_order <- c(
23, 110, 63, 51, 20, 62, 12, 29, 43, 77, 82, 130, 145, 40, 27, 121, 17, 57,
146, 50, 128, 49, 78, 66, 5, 96
) |>
as.character()
sub_comm11 <- block_pair_communities(hmem, 1, 1) |>
mutate(
block_star=fct_relevel(block_star, c(hh_subblocks, se_subblocks)),
block_otu=factor(block_otu, levels=taxa_block_order)
)
sub_comm11
filter(sub_comm11, block_otu == "96")
filter(sub_comm11, block_otu == "96")$sub_comm[[1]]
filter(sub_comm11, block_otu == "96")$sub_comm[[1]] |> colnames()
hemem
hmem
filter(hmem, level == 0, label == "k__Bacteria;p__Spirochaetes;c__Spirochaetes;o__Spirochaetales;f__Spirochaetaceae;g__;s__")
filter(hmem, level == 0, block == 21)
filter(hmem, level == 0, block == 21)$label
select(abun, filter(hmem, level == 0, block == 21)$label)
select(abun, filter(hmem, level == 0, block == 21)$label) |> summary()
filter(abun, `k__Bacteria;p__Spirochaetes;c__Spirochaetes;o__Spirochaetales;f__Spirochaetaceae;g__;s__` == 81)
filter(abun, `k__Bacteria;p__Spirochaetes;c__Spirochaetes;o__Spirochaetales;f__Spirochaetaceae;g__;s__` < 10000)
filter(abun, `k__Bacteria;p__Spirochaetes;c__Spirochaetes;o__Spirochaetales;f__Spirochaetaceae;g__;s__` < 15000)
filter(abun, `k__Bacteria;p__Spirochaetes;c__Spirochaetes;o__Spirochaetales;f__Spirochaetaceae;g__;s__` < 20000)
filter(abun, `k__Bacteria;p__Spirochaetes;c__Spirochaetes;o__Spirochaetales;f__Spirochaetaceae;g__;s__` < 20000)$index
filter(abun, `k__Bacteria;p__Spirochaetes;c__Spirochaetes;o__Spirochaetales;f__Spirochaetaceae;g__;s__` < 18000)$index
filter(hmem, level == 1, block == 5)
filter(hmem, level == 1, block == 5)$label
